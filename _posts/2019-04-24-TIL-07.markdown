---
layout: post
title:  "TIL-07 : 프론트와 백엔드의 주고받기"
date:   2019-04-24 19:00:00 +0900
categories: TIL
---


## 오늘 코드카타는 재미있었다.

예리님이 의도한 답안과는 완전히 다른 방향으로 해결하여, 나중에 써먹을 데 없는 코드로 답안을 만들었지만...
최근에 계속해온 코드카타 + 모범답안의 충격들 덕분인지 문제를 해결하는 잔머리가 좀 더 쓸만해지는 것 같다.
코드카타 외에도 틈나는 대로 혼자 코딩 문제풀이를 조금씩 하는 것도 도움이 되는 것 같다.


## API 여...! 서버여...! 통신이여...!

뭐라고 제대로 정리해서 글을 적기가 조금 힘들긴 하다만, 오늘 2가지 큰 깨달음이 있었다.

첫번째,
서버와의 통신은 (함수형으로 view에서 받을 경우) 인자로 받자마자 return으로 바로 쏘는 것이다!
여태까지는 프론트에서 쏘는 절차가 있고, 그 이후에 서버에서 다시 쏘는 절차가 있는, 두 가지로 나누어서 생각해왔다. 하지만 그것은 정답이라고 할 수 없는 것이다. 프론트에서 백엔드로 쏘자마자 바로 응답을 받는다! GET 이든 POST든 프론트에서 호출하는 행위 자체는 이미 응답을 받는 것과 하나의 셋트로 가져가는 것이다! 그래서 views.py에서 하나의 함수로 처리가 끝나는 간단한 구조였던 것이다!!!

두번째,
이 두번째가 나에겐 더 큰 것이었다. 과거 장고를 배울 때, urls와 views 등을 배우고 적용할 때는 템플릿이라는 것도 사용하였고, 매번 페이지를 다르게 갈때마다 각 파일에 주소를 설정하고, 상단 브라우져 주소가 변하고~ 블라블라~ 여튼 주소형태의 GET, POST 호출과 브라우져 상단의 주소를 동일시하고 있었다. 그러니 자바스크립트를 사용해서 바꾼다는 개념까지는 이해해도, 왜 주소를 쏘는거지? 그럼 페이지가 바뀌는거 아닌가? 라는 둥... 호출하는 주소값과 브라우져의 주소를 동일시하다보니 영 이해가 안갔었다. 하지만 GET 등으로 호출하는 주소값을 그것에서 분리! 애초에 프론트 서버와 백엔드 서버를 나누어서도 생각을 하니 드디어 깨우침!!! 아 힘든 시간이었다... 단순한 거였는데... 뭔가 혼자 복잡하게 생각하면서 괴로워 했던 것 같다.

어쨋건 지루하고 괴로웠던 이해의 시간을 마무리하고 본격적인 miniter API 프로젝트 시작!


## 일단 그전에 프론트용 로컬서버를 구동해보자.

백엔드 서버를 이미 python으로 돌리고 있긴 하나 프론트의 miniter도 확인을 하려면 얘를 서버에 올려야 하는데... 계속 repl을 통해서 확인하고 싶은 생각도 없고... 백엔드랑은 따로 해야한다고 하고... 그래서 프론트니까 노드! 를 생각해서 이것저것 알아보고 노드로 서버롤 구동하려하는데 자꾸 에러... 설치가 안되네... 힘겨워 하고 있는데 은우님이 스윽 지나가시다가 스윽 코드 한줄 쳐주시고 문제가 해결되었다-!

`python3 -m http.server 8080`

참 쉽죠?
이미 백엔드쪽 서버가 8000 포트를 사용하고 있으니 8080포트로 변경하여 띄워줍니다


## 오늘은 vim과 mvim을 좀더 잘 써보자!

그동안 미뤄왔던 vim 기본 플러그인 설정과 mvim사용을 시작해보았다!.
일단 `mvim`을 사용해보니 새창으로 뜨는거에서 완전 꿀!! 쓸데없이 탭을 늘려서 쓰던 고통에서 해방!! 신난다!! 마우스 작동되는 것도 일단 편하고, vim의 기능은 다 이어진다고 하니 참 좋다! 진작에 쓸껄 이라는 생각 중...


## vundle 말고 vim-plug ?

vundle을 설치해보았다. vundle을 통해 플러그인을 설치하고 관리하는 것을 배우고자 검색검색을 하던 중... vim-plug 라는 것을 발견! 더 가볍고 더 빠르단다! 오오 괜찮은데? 싶었는데 충격적인 것을 알게 되었다. vundle 업데이트가 중단된지 몇년이 지났다는 것! 뭐 그래도 쓰는데 문제는 없다곤 하지만... vim-plug 로 갈아타야겠다고 생각을 하고 실행!!

vundle을 지우는 방법은 무엇인가!?

- 우선 `.vimrc` 파일에서 vundle 관련 요소를 다 지운다. 나의 경우엔 애초에 vundle것만 있어서 다 지워버렸다.
- `~/.vim` 디렉토리 내의 모든 내용을 지운다!
- 끝!

자 이제 vim-plug 를 설치해보자! 일단 다운로드는 [여기서](https://github.com/junegunn/vim-plug)
근데 plug.vim 파일 하나만 받아서 폴더에 넣으면 된단다...github에서 하나만 다운 받는 방법이 뭘까...? 검색검색...

진짜 파일 하나 다운받는 기능 같은게 보이지 않네... 나중에 질문해야겠다...
일단 github 상에서 해당 파일로 접근하여 raw 파일 보기모드에서 우클릭 ->  `save as...`로 저장 성공.....

이후 vim-plug 설치 및 기본 셋팅도 완료하고, 여러가지 시행착오를 겪은 후 다음의 4가지 플러그인들을 우선 설치.

- ScrollCollors
- nerdtree
- hardmode
- Align
- vim-surround 는 아직 어떤 효용성이 있는지 몰라서 보류

`.vimrc`를 관리해주는 dot-files를 깃헙에 푸쉬완료.
`plug.vim` 파일과 여러 플러그인이 설치된 .vim 폴더 git으로 관리해줘야 하나 고민했지만,
애초에 플러그인을 vim-plug가 관리해주고 플러그인 리스트는 dot-files의 `.vimrc`로 관리중이 굳이 필요는 없겠다 싶어서 보류. `plug.vim` 파일에 대해서만 내일 자문을 구해봐야지.

플러그인 찬찬히 한번씩 써보고 퇴근해야겠다...
